name: CI
on:
  pull_request:
  push:
    branches:
    - 'main'
env:
  go-version: 1.17
  cache-version: 1
jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - run: make build
  check-goreleaser-config:
    name: Check goreleaser.yml
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go-version }}
      - uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: check -f .goreleaser.yml
  test:
    name: Small tests
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - uses: ./.github/actions/aqua
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - run: make test
    - run: make check-generate
    - run: make envtest
  e2e:
    name: End-to-End Tests
    strategy:
      matrix:
        k8s-version: ["1.22.4", "1.23.1"]
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ env.go-version }}
    - uses: ./.github/actions/aqua
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - run: make start KUBERNETES_VERSION=${{ matrix.k8s-version }}
      working-directory: e2e
    - run: make test
      working-directory: e2e
    - run: make logs
      working-directory: e2e
      if: always()
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: logs-${{ matrix.k8s-version }}.tar.gz
        path: e2e/logs.tar.gz
  tilt:
    name: Run tilt ci
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go-version }}
      - uses: ./.github/actions/aqua
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: make controller-gen
      - run: make dev
      - run: tilt ci
  dry-run:
    name: Dry-run release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.go-version }}
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: --snapshot --skip-publish --rm-dist
      - uses: ./.github/actions/aqua
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Test built containers
        run: make container-structure-test
